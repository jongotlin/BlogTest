name: Backend

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    backend:
        runs-on: ubuntu-18.04

        strategy:
            fail-fast: true
            matrix:
                php-versions: ['7.4']

        steps:
            - name: Set up MySQL
              uses: cweinberger/github-actions-mysql@1.0.0
              with:
                  version: 8.0
                  rootPassword: root
                  sqlMode: STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO

            - uses: actions/checkout@v2

            - name: Setup PHP, extensions and composer with shivammathur/setup-php
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
                  ini-values: date.timezone=Europe/Stockholm
              env:
                  update: true

            - name: Check PHP Version
              run: php -v

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v1
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Composer install
              run: composer install --prefer-dist --no-progress --no-scripts

            - name: build fixtures
              env:
                  ENV_TEST: ${{ secrets.ENV_TEST }}
              run: |
                  echo "$ENV_TEST" > .env.test.local
                  ./build.sh -t

            - name: Validate mapping
              run: php bin/console doctrine:schema:validate --env=test

            - name: Run unit tests
              run: vendor/bin/phpunit --testdox
